(()=>{"use strict";var e={55:function(e,t,n){var r,o=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n=r(e),i=0;i<n.length;i++)"default"!==n[i]&&o(t,e,n[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Gamepage=void 0;const c=n(640),l=i(n(407)),d=a(n(373)),h=new AbortController,u=h.signal;class g extends d.default{constructor(e){super(e),this.cntNode=-1}setCallback(e){this.callback=e}changePage(e={cntNode:10}){this.root.innerHTML='\n            <section id="screen-game">\n                <h1>Graph to Plain!</h1>\n                <canvas id="game_screen"></canvas>\n                <p id="info"></p>\n            </section>',this.cntNode=e.cntNode,this.gameScreen=document.getElementById("game_screen"),this.textInfo=document.getElementById("info");const t=this.gameScreen.getContext("2d");this.gameScreen.height=c.CANVAS_HEIGHT,this.gameScreen.width=c.CANVAS_WIDTH;const n=new l.Graph(t);this.createPlanegraph(n,5),n.updateEdgeColor(),n.draw(),this.settingCanvasEvent(n)}settingCanvasEvent(e){if(!this.gameScreen)throw new Error("Property is unsetted");let t=!1,n=0,r=0,o=0,s=0,i=null;this.gameScreen.addEventListener("mousedown",a=>{if(!this.gameScreen)throw new Error("Property is unsetted");const c=this.gameScreen.getBoundingClientRect(),l=a.clientX-c.left,d=a.clientY-c.top;n=l,r=d,i=e.getClosestNode(l,d),null==i||i.setFillColor("red"),null==i||i.draw();const h=null==i?void 0:i.getPos();null!=h&&(o=h[0],s=h[1]),t=!0},{signal:u}),this.root.addEventListener("mousemove",a=>{if(!t)return;if(!this.gameScreen)throw new Error("Property is unsetted");const l=this.gameScreen.getBoundingClientRect(),d=a.clientX-l.left,h=a.clientY-l.top,u=Math.min(Math.max(d-n+o,c.NODE_RADIUS),c.CANVAS_WIDTH-c.NODE_RADIUS),g=Math.min(Math.max(h-r+s,c.NODE_RADIUS),c.CANVAS_HEIGHT-c.NODE_RADIUS);null==i||i.setPos(u,g),e.updateEdgeColor(),e.draw()}),this.root.addEventListener("mouseup",n=>{t&&(null==i||i.setFillColor("black"),null==i||i.draw(),t=!1,e.checkCrossedGraph()||this.finishGame(e))})}createPlanegraph(e,t){const n=e.getCtx(),r=t;let o=null;for(let t=0;t<r;t++){let r=460*Math.random()+20,s=460*Math.random()+20;const i=new l.GraphNode(n,r,s,t);e.addGraphElement(i),0==this.getRandint(0,2)&&null!=o&&e.addGraphElement(new l.GraphEdge(n,o,i)),o=i}const s=e.getNodes(),i=this.createPlanegraphEdges(r);for(const t of i)e.addGraphElement(new l.GraphEdge(n,s[t[0]],s[t[1]]));this.textInfo&&(this.textInfo.innerText=`node:${r} edge:${i.length}`)}createPlanegraphEdges(e){let t=[],n=[],r=0;for(;r<1e3;){const o=0==this.getRandint(0,2),s=this.getRandint(0,e-2),i=[s,this.getRandint(s+2,e)];if(o&&this.checkCrossing(t,i))t.push(i);else{if(!this.checkCrossing(n,i)){r++;continue}n.push(i)}r=0}return console.log(t.sort()),console.log("-----"),console.log(n.sort()),t.concat(n)}checkCrossing(e,t){for(const n of e){const e=n[0]<=t[0]&&t[1]<=n[1],r=t[0]<=n[0]&&n[1]<=t[1];if(t[0]==n[0]&&n[1]==t[1]||!e&&!r)return!1}return!0}getRandint(e,t){if(e>t){const n=e;e=t,t=n}return Math.floor(Math.random()*(t-e))+e}finishGame(e){if(h.abort(),e.drawClearedGraph(),!this.callback)throw new Error("Property is unsetted");this.callback({time:"3:00.00",cntNode:this.cntNode})}}t.Gamepage=g},108:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Resultpage=void 0;const o=r(n(373));class s extends o.default{constructor(e){super(e),this.cntNode=-1}setCallback(e){this.callback=e}changePage(e={time:"--:--.--",cntNode:10}){this.root.innerHTML='\n            <section id="screen-result">\n                <h2>結果</h2>\n\n                \x3c!-- 概要カード --\x3e\n                <article id="result-summary" aria-busy="true">\n                    \x3c!-- タイトル・要約などを動的に挿入 --\x3e\n                </article>\n\n                \x3c!-- メトリクス（任意数のKPIを自由に表示） --\x3e\n                <h3>メトリクス</h3>\n                <table id="result-metrics">\n                    <thead>\n                        <tr><th>項目</th><th>値</th></tr>\n                    </thead>\n                    <tbody>\n                        \x3c!-- 動的に挿入 --\x3e\n                    </tbody>\n                </table>\n\n                \x3c!-- セクション（任意数、配列で増減可能） --\x3e\n                <div id="result-sections">\n                    \x3c!-- 動的に <article> や <details> を追加 --\x3e\n                </div>\n\n                <footer style="margin-top:1rem;">\n                    <button type="button" id="btn_retry">もう一度</button>\n                    <button type="button" id="btn_backtitle" class="secondary">タイトルへ</button>\n                </footer>\n            </section>',this.cntNode=e.cntNode,document.getElementById("btn_retry").addEventListener("click",()=>{if(!this.callback)throw new Error("Property is unsetted");this.callback({page:"game",data:{cntNode:this.cntNode}})}),document.getElementById("btn_backtitle").addEventListener("click",()=>{if(!this.callback)throw new Error("Property is unsetted");this.callback({page:"title"})})}}t.Resultpage=s},267:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=r(n(620)),s=((new AbortController).signal,document.getElementsByTagName("body")[0],document.getElementById("page"));function i(){const e=document.documentElement.getAttribute("data-theme")||"light";document.documentElement.setAttribute("data-theme","light"===e?"dark":"light")}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("switch_mode");null==e||e.addEventListener("click",i),new o.default(s,"title")})},373:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e){this.root=e}}},407:function(e,t,n){var r,o=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n=r(e),i=0;i<n.length;i++)"default"!==n[i]&&o(t,e,n[i]);return s(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.Graph=t.GraphEdge=t.GraphNode=void 0;const a=i(n(640));class c{draw(){}}class l extends c{constructor(e,t,n,r){super(),this.fill_color="black",this.ctx=e,this.center_x=t,this.center_y=n,this.id=r}getPos(){return[this.center_x,this.center_y]}getDist(e,t){return Math.sqrt((this.center_x-e)**2+(t-this.center_y)**2)}setFillColor(e){this.fill_color=e}setPos(e,t){this.center_x=e,this.center_y=t}draw(){this.ctx.beginPath(),this.ctx.arc(this.center_x,this.center_y,a.NODE_RADIUS,0,2*Math.PI),this.ctx.fillStyle=this.fill_color,this.ctx.fill(),this.ctx.closePath()}}t.GraphNode=l;class d extends c{constructor(e,t,n){super(),this.color="black",this.ctx=e,this.node1=t,this.node2=n}setColor(e){this.color=e}draw(){const e=this.ctx.lineWidth,t=this.ctx.strokeStyle,[n,r]=this.node1.getPos(),[o,s]=this.node2.getPos();this.ctx.lineWidth=a.EDGE_WIDTH,this.ctx.strokeStyle=this.color,this.ctx.beginPath(),this.ctx.moveTo(n,r),this.ctx.lineTo(o,s),this.ctx.stroke(),this.ctx.closePath(),this.ctx.lineWidth=e,this.ctx.strokeStyle=t}checkCrossed(e){const[t,n]=this.node1.getPos(),[r,o]=this.node2.getPos(),[s,i]=e.node1.getPos(),[a,c]=e.node2.getPos();return!(((t-r)*(i-n)-(n-o)*(s-t))*((t-r)*(c-n)-(n-o)*(a-t))>0)&&!(((s-a)*(n-i)-(i-c)*(t-s))*((s-a)*(o-i)-(i-c)*(r-s))>0)}checkNeighbor(e){return this.node1==e.node1||this.node1==e.node2||this.node2==e.node1||this.node2==e.node2}}t.GraphEdge=d,t.Graph=class{constructor(e){this.graphNodes=[],this.graphEdges=[],this.ctx=e}getNodes(){return this.graphNodes}getCtx(){return this.ctx}addGraphElement(e){e instanceof l?this.graphNodes.push(e):e instanceof d&&this.graphEdges.push(e)}updateEdgeColor(){const e=this.checkCrossedEdges(),t=this.graphEdges.length;let n=!1;for(let r=0;r<t;r++)this.graphEdges[r].setColor(e[r]?"red":"black"),n||(n=e[r]);return n}checkCrossedGraph(){return!this.checkCrossedEdges().every(e=>!e)}checkCrossedEdges(){const e=this.graphEdges.length;let t=Array(e).fill(!1);for(let n=0;n<e;n++)for(let r=n+1;r<e;r++)this.graphEdges[n].checkNeighbor(this.graphEdges[r])||this.graphEdges[n].checkCrossed(this.graphEdges[r])&&(t[n]=!0,t[r]=!0);return t}draw(){this.ctx.clearRect(0,0,a.CANVAS_HEIGHT,a.CANVAS_WIDTH);for(const e of this.graphEdges)e.draw();for(const e of this.graphNodes)e.draw()}getClosestNode(e,t){let n=1/0,r=null;for(const o of this.graphNodes){const s=o.getDist(e,t);console.log(`${o.id} ${s}`),n>s&&(n=s,r=o)}return r}drawClearedGraph(){for(const e of this.graphEdges)e.setColor("yellow");console.log("fin"),this.draw()}}},620:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=n(749),o=n(55),s=n(108);t.default=class{constructor(e,t){const n=new r.Titlepage(e),i=new o.Gamepage(e),a=new s.Resultpage(e);n.setCallback(e=>{i.changePage(e)}),i.setCallback(e=>{a.changePage(e)}),a.setCallback(e=>{switch(e.page){case"title":n.changePage();break;case"game":i.changePage(e.data)}}),this._pages={title:n,game:i,result:a},this._pages[t].changePage()}}},640:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.EDGE_WIDTH=t.NODE_RADIUS=t.CANVAS_WIDTH=t.CANVAS_HEIGHT=void 0,t.CANVAS_HEIGHT=500,t.CANVAS_WIDTH=500,t.NODE_RADIUS=10,t.EDGE_WIDTH=5},749:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Titlepage=void 0;const o=r(n(373));class s extends o.default{constructor(e){super(e)}setCallback(e){this.callback=e}changePage(){this.root.innerHTML='\n<section id="screen-title" data-screen>\n    <h1>Planarity Challenge</h1>\n    <p>\n        ランダムに生成された <strong>平面的グラフ</strong> を乱した配置から開始します。<br />\n        頂点をドラッグして <em>辺の交差をなくす</em> ことを目指しましょう。\n    </p>\n\n    <form id="title-form" autocomplete="off">\n        <fieldset>\n            <legend>ゲーム設定</legend>\n\n            <label for="vcount">\n                頂点数\n                <input id="vcount" type="number" min="6" max="60" value="18" required />\n            </label>\n\n            \x3c!-- <label for="edgeRatio">\n                辺密度（0〜1）\n                <input id="edgeRatio" type="range" min="0.1" max="1" step="0.05" value="0.6" />\n                <output id="edgeRatioOut">0.60</output>\n            </label>\n\n            <label for="scramble">\n                初期シャッフル強度\n                <input id="scramble" type="range" min="0" max="1" step="0.05" value="0.7" />\n                <output id="scrambleOut">0.70</output>\n            </label>\n\n            <label for="seed">\n                乱数シード（任意）\n                <input id="seed" type="text" placeholder="例: my-seed-123" />\n                <button type="button" data-action="random-seed">乱数生成</button>\n            </label>\n\n            <label>\n                <input id="autoSnap" type="checkbox" checked />\n                頂点スナップ補助を有効にする\n            </label> --\x3e\n        </fieldset>\n\n        <button type="button" id="btn_gamestart">ゲーム開始</button>\n    </form>\n\n    <details id="howto">\n        <summary>遊び方</summary>\n        <ul>\n            <li>頂点をドラッグして位置を調整します。</li>\n            <li>辺どうしの交差数が <strong>0</strong> になればクリアです。</li>\n            <li>常に「元は平面的なグラフ」を使用しますが、配置を乱して開始します。</li>\n        </ul>\n    </details>\n</section>',document.getElementById("btn_gamestart").addEventListener("click",()=>{const e=Number(document.getElementById("vcount").value);if(!this.callback)throw new Error("Property is unsetted");this.callback({cntNode:e})})}}t.Titlepage=s}},t={};!function n(r){var o=t[r];if(void 0!==o)return o.exports;var s=t[r]={exports:{}};return e[r].call(s.exports,s,s.exports,n),s.exports}(267)})();